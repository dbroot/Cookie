//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.Protocol.Network.Messages.Game.Context.Roleplay.Havenbag
{
    using Cookie.Protocol.Network.Types.Game.Guild;
    using System.Collections.Generic;
    using Cookie.Protocol.Network.Messages;
    using Cookie.Protocol.Network.Types;
    using Cookie.IO;
    
    
    public class HavenBagFurnituresMessage : NetworkMessage
    {
        
        public const uint ProtocolId = 6634;
        
        public override uint MessageID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private List<HavenBagFurnitureInformation> m_furnituresInfos;
        
        public virtual List<HavenBagFurnitureInformation> FurnituresInfos
        {
            get
            {
                return m_furnituresInfos;
            }
            set
            {
                m_furnituresInfos = value;
            }
        }
        
        public HavenBagFurnituresMessage(List<HavenBagFurnitureInformation> furnituresInfos)
        {
            m_furnituresInfos = furnituresInfos;
        }
        
        public HavenBagFurnituresMessage()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            writer.WriteShort(((short)(m_furnituresInfos.Count)));
            int furnituresInfosIndex;
            for (furnituresInfosIndex = 0; (furnituresInfosIndex < m_furnituresInfos.Count); furnituresInfosIndex = (furnituresInfosIndex + 1))
            {
                HavenBagFurnitureInformation objectToSend = m_furnituresInfos[furnituresInfosIndex];
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            int furnituresInfosCount = reader.ReadUShort();
            int furnituresInfosIndex;
            m_furnituresInfos = new System.Collections.Generic.List<HavenBagFurnitureInformation>();
            for (furnituresInfosIndex = 0; (furnituresInfosIndex < furnituresInfosCount); furnituresInfosIndex = (furnituresInfosIndex + 1))
            {
                HavenBagFurnitureInformation objectToAdd = new HavenBagFurnitureInformation();
                objectToAdd.Deserialize(reader);
                m_furnituresInfos.Add(objectToAdd);
            }
        }
    }
}
