//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.Protocol.Network.Messages.Game.Context.Roleplay.Havenbag.Meeting
{
    using Cookie.Protocol.Network.Types.Game.Character;
    using System.Collections.Generic;
    using Cookie.Protocol.Network.Messages;
    using Cookie.Protocol.Network.Types;
    using Cookie.IO;
    
    
    public class InviteInHavenBagOfferMessage : NetworkMessage
    {
        
        public const uint ProtocolId = 6643;
        
        public override uint MessageID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private CharacterMinimalInformations m_hostInformations;
        
        public virtual CharacterMinimalInformations HostInformations
        {
            get
            {
                return m_hostInformations;
            }
            set
            {
                m_hostInformations = value;
            }
        }
        
        private int m_timeLeftBeforeCancel;
        
        public virtual int TimeLeftBeforeCancel
        {
            get
            {
                return m_timeLeftBeforeCancel;
            }
            set
            {
                m_timeLeftBeforeCancel = value;
            }
        }
        
        public InviteInHavenBagOfferMessage(CharacterMinimalInformations hostInformations, int timeLeftBeforeCancel)
        {
            m_hostInformations = hostInformations;
            m_timeLeftBeforeCancel = timeLeftBeforeCancel;
        }
        
        public InviteInHavenBagOfferMessage()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            m_hostInformations.Serialize(writer);
            writer.WriteVarInt(m_timeLeftBeforeCancel);
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            m_hostInformations = new CharacterMinimalInformations();
            m_hostInformations.Deserialize(reader);
            m_timeLeftBeforeCancel = reader.ReadVarInt();
        }
    }
}
