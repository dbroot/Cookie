//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.Protocol.Network.Messages.Game.Context.Roleplay
{
    using Cookie.Protocol.Network.Types.Game.Context.Roleplay;
    using Cookie.Protocol.Network;
    using System.Collections.Generic;
    using Cookie.Protocol.Network.Messages;
    using Cookie.Protocol.Network.Types;
    using Cookie.IO;
    
    
    public class GameRolePlayShowMultipleActorsMessage : NetworkMessage
    {
        
        public const uint ProtocolId = 6712;
        
        public override uint MessageID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private List<GameRolePlayActorInformations> m_informationsList;
        
        public virtual List<GameRolePlayActorInformations> InformationsList
        {
            get
            {
                return m_informationsList;
            }
            set
            {
                m_informationsList = value;
            }
        }
        
        public GameRolePlayShowMultipleActorsMessage(List<GameRolePlayActorInformations> informationsList)
        {
            m_informationsList = informationsList;
        }
        
        public GameRolePlayShowMultipleActorsMessage()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            writer.WriteShort(((short)(m_informationsList.Count)));
            int informationsListIndex;
            for (informationsListIndex = 0; (informationsListIndex < m_informationsList.Count); informationsListIndex = (informationsListIndex + 1))
            {
                GameRolePlayActorInformations objectToSend = m_informationsList[informationsListIndex];
                writer.WriteUShort(((ushort)(objectToSend.TypeID)));
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            int informationsListCount = reader.ReadUShort();
            int informationsListIndex;
            m_informationsList = new System.Collections.Generic.List<GameRolePlayActorInformations>();
            for (informationsListIndex = 0; (informationsListIndex < informationsListCount); informationsListIndex = (informationsListIndex + 1))
            {
                GameRolePlayActorInformations objectToAdd = ProtocolTypeManager.GetInstance<GameRolePlayActorInformations>((short)reader.ReadUShort());
                objectToAdd.Deserialize(reader);
                m_informationsList.Add(objectToAdd);
            }
        }
    }
}
