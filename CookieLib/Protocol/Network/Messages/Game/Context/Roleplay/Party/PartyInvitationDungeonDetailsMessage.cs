//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.Protocol.Network.Messages.Game.Context.Roleplay.Party
{
    using Cookie.Protocol.Network.Types.Game.Context.Roleplay.Party;
    using System.Collections.Generic;
    using Cookie.Protocol.Network.Messages;
    using Cookie.Protocol.Network.Types;
    using Cookie.IO;
    
    
    public class PartyInvitationDungeonDetailsMessage : PartyInvitationDetailsMessage
    {
        
        public new const uint ProtocolId = 6262;
        
        public override uint MessageID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private List<System.Boolean> m_playersDungeonReady;
        
        public virtual List<System.Boolean> PlayersDungeonReady
        {
            get
            {
                return m_playersDungeonReady;
            }
            set
            {
                m_playersDungeonReady = value;
            }
        }
        
        private ushort m_dungeonId;
        
        public virtual ushort DungeonId
        {
            get
            {
                return m_dungeonId;
            }
            set
            {
                m_dungeonId = value;
            }
        }
        
        public PartyInvitationDungeonDetailsMessage(List<System.Boolean> playersDungeonReady, ushort dungeonId)
        {
            m_playersDungeonReady = playersDungeonReady;
            m_dungeonId = dungeonId;
        }
        
        public PartyInvitationDungeonDetailsMessage()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            base.Serialize(writer);
            writer.WriteShort(((short)(m_playersDungeonReady.Count)));
            int playersDungeonReadyIndex;
            for (playersDungeonReadyIndex = 0; (playersDungeonReadyIndex < m_playersDungeonReady.Count); playersDungeonReadyIndex = (playersDungeonReadyIndex + 1))
            {
                writer.WriteBoolean(m_playersDungeonReady[playersDungeonReadyIndex]);
            }
            writer.WriteVarUhShort(m_dungeonId);
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            base.Deserialize(reader);
            int playersDungeonReadyCount = reader.ReadUShort();
            int playersDungeonReadyIndex;
            m_playersDungeonReady = new System.Collections.Generic.List<bool>();
            for (playersDungeonReadyIndex = 0; (playersDungeonReadyIndex < playersDungeonReadyCount); playersDungeonReadyIndex = (playersDungeonReadyIndex + 1))
            {
                m_playersDungeonReady.Add(reader.ReadBoolean());
            }
            m_dungeonId = reader.ReadVarUhShort();
        }
    }
}
