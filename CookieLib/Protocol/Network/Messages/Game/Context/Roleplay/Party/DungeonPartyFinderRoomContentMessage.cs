//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.Protocol.Network.Messages.Game.Context.Roleplay.Party
{
    using Cookie.Protocol.Network.Types.Game.Context.Roleplay.Party;
    using System.Collections.Generic;
    using Cookie.Protocol.Network.Messages;
    using Cookie.Protocol.Network.Types;
    using Cookie.IO;
    
    
    public class DungeonPartyFinderRoomContentMessage : NetworkMessage
    {
        
        public const uint ProtocolId = 6247;
        
        public override uint MessageID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private List<DungeonPartyFinderPlayer> m_players;
        
        public virtual List<DungeonPartyFinderPlayer> Players
        {
            get
            {
                return m_players;
            }
            set
            {
                m_players = value;
            }
        }
        
        private ushort m_dungeonId;
        
        public virtual ushort DungeonId
        {
            get
            {
                return m_dungeonId;
            }
            set
            {
                m_dungeonId = value;
            }
        }
        
        public DungeonPartyFinderRoomContentMessage(List<DungeonPartyFinderPlayer> players, ushort dungeonId)
        {
            m_players = players;
            m_dungeonId = dungeonId;
        }
        
        public DungeonPartyFinderRoomContentMessage()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            writer.WriteShort(((short)(m_players.Count)));
            int playersIndex;
            for (playersIndex = 0; (playersIndex < m_players.Count); playersIndex = (playersIndex + 1))
            {
                DungeonPartyFinderPlayer objectToSend = m_players[playersIndex];
                objectToSend.Serialize(writer);
            }
            writer.WriteVarUhShort(m_dungeonId);
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            int playersCount = reader.ReadUShort();
            int playersIndex;
            m_players = new System.Collections.Generic.List<DungeonPartyFinderPlayer>();
            for (playersIndex = 0; (playersIndex < playersCount); playersIndex = (playersIndex + 1))
            {
                DungeonPartyFinderPlayer objectToAdd = new DungeonPartyFinderPlayer();
                objectToAdd.Deserialize(reader);
                m_players.Add(objectToAdd);
            }
            m_dungeonId = reader.ReadVarUhShort();
        }
    }
}
