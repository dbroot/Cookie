//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.Protocol.Network.Messages.Game.Context.Dungeon
{
    using System.Collections.Generic;
    using Cookie.Protocol.Network.Messages;
    using Cookie.Protocol.Network.Types;
    using Cookie.IO;
    
    
    public class DungeonKeyRingUpdateMessage : NetworkMessage
    {
        
        public const uint ProtocolId = 6296;
        
        public override uint MessageID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private ushort m_dungeonId;
        
        public virtual ushort DungeonId
        {
            get
            {
                return m_dungeonId;
            }
            set
            {
                m_dungeonId = value;
            }
        }
        
        private bool m_available;
        
        public virtual bool Available
        {
            get
            {
                return m_available;
            }
            set
            {
                m_available = value;
            }
        }
        
        public DungeonKeyRingUpdateMessage(ushort dungeonId, bool available)
        {
            m_dungeonId = dungeonId;
            m_available = available;
        }
        
        public DungeonKeyRingUpdateMessage()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            writer.WriteVarUhShort(m_dungeonId);
            writer.WriteBoolean(m_available);
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            m_dungeonId = reader.ReadVarUhShort();
            m_available = reader.ReadBoolean();
        }
    }
}
