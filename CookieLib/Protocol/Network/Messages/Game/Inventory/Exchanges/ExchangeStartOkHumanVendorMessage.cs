//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.Protocol.Network.Messages.Game.Inventory.Exchanges
{
    using Cookie.Protocol.Network.Types.Game.Data.Items;
    using System.Collections.Generic;
    using Cookie.Protocol.Network.Messages;
    using Cookie.Protocol.Network.Types;
    using Cookie.IO;
    
    
    public class ExchangeStartOkHumanVendorMessage : NetworkMessage
    {
        
        public const uint ProtocolId = 5767;
        
        public override uint MessageID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private List<ObjectItemToSellInHumanVendorShop> m_objectsInfos;
        
        public virtual List<ObjectItemToSellInHumanVendorShop> ObjectsInfos
        {
            get
            {
                return m_objectsInfos;
            }
            set
            {
                m_objectsInfos = value;
            }
        }
        
        private double m_sellerId;
        
        public virtual double SellerId
        {
            get
            {
                return m_sellerId;
            }
            set
            {
                m_sellerId = value;
            }
        }
        
        public ExchangeStartOkHumanVendorMessage(List<ObjectItemToSellInHumanVendorShop> objectsInfos, double sellerId)
        {
            m_objectsInfos = objectsInfos;
            m_sellerId = sellerId;
        }
        
        public ExchangeStartOkHumanVendorMessage()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            writer.WriteShort(((short)(m_objectsInfos.Count)));
            int objectsInfosIndex;
            for (objectsInfosIndex = 0; (objectsInfosIndex < m_objectsInfos.Count); objectsInfosIndex = (objectsInfosIndex + 1))
            {
                ObjectItemToSellInHumanVendorShop objectToSend = m_objectsInfos[objectsInfosIndex];
                objectToSend.Serialize(writer);
            }
            writer.WriteDouble(m_sellerId);
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            int objectsInfosCount = reader.ReadUShort();
            int objectsInfosIndex;
            m_objectsInfos = new System.Collections.Generic.List<ObjectItemToSellInHumanVendorShop>();
            for (objectsInfosIndex = 0; (objectsInfosIndex < objectsInfosCount); objectsInfosIndex = (objectsInfosIndex + 1))
            {
                ObjectItemToSellInHumanVendorShop objectToAdd = new ObjectItemToSellInHumanVendorShop();
                objectToAdd.Deserialize(reader);
                m_objectsInfos.Add(objectToAdd);
            }
            m_sellerId = reader.ReadDouble();
        }
    }
}
