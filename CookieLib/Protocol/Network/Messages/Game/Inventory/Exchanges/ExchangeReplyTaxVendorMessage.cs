//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.Protocol.Network.Messages.Game.Inventory.Exchanges
{
    using System.Collections.Generic;
    using Cookie.Protocol.Network.Messages;
    using Cookie.Protocol.Network.Types;
    using Cookie.IO;
    
    
    public class ExchangeReplyTaxVendorMessage : NetworkMessage
    {
        
        public const uint ProtocolId = 5787;
        
        public override uint MessageID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private ulong m_objectValue;
        
        public virtual ulong ObjectValue
        {
            get
            {
                return m_objectValue;
            }
            set
            {
                m_objectValue = value;
            }
        }
        
        private ulong m_totalTaxValue;
        
        public virtual ulong TotalTaxValue
        {
            get
            {
                return m_totalTaxValue;
            }
            set
            {
                m_totalTaxValue = value;
            }
        }
        
        public ExchangeReplyTaxVendorMessage(ulong objectValue, ulong totalTaxValue)
        {
            m_objectValue = objectValue;
            m_totalTaxValue = totalTaxValue;
        }
        
        public ExchangeReplyTaxVendorMessage()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            writer.WriteVarUhLong(m_objectValue);
            writer.WriteVarUhLong(m_totalTaxValue);
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            m_objectValue = reader.ReadVarUhLong();
            m_totalTaxValue = reader.ReadVarUhLong();
        }
    }
}
