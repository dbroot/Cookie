//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using Cookie.Network;

namespace Cookie.Protocol.Network.Types.Game.Context
{
    using Cookie.Protocol.Network.Types.Game.Look;
    using Cookie.IO;


    public class GameContextActorInformations : NetworkType
    {
        
        public const short ProtocolId = 150;
        
        public override short TypeID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private EntityLook m_look;
        
        public virtual EntityLook Look
        {
            get
            {
                return m_look;
            }
            set
            {
                m_look = value;
            }
        }
        
        private EntityDispositionInformations m_disposition;
        
        public virtual EntityDispositionInformations Disposition
        {
            get
            {
                return m_disposition;
            }
            set
            {
                m_disposition = value;
            }
        }
        
        private double m_contextualId;
        
        public virtual double ContextualId
        {
            get
            {
                return m_contextualId;
            }
            set
            {
                m_contextualId = value;
            }
        }
        
        public GameContextActorInformations(EntityLook look, EntityDispositionInformations disposition, double contextualId)
        {
            m_look = look;
            m_disposition = disposition;
            m_contextualId = contextualId;
        }
        
        public GameContextActorInformations()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            writer.WriteDouble(m_contextualId);
            m_look.Serialize(writer);
            writer.WriteUShort(((ushort)(m_disposition.TypeID)));
            m_disposition.Serialize(writer);
            
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            m_contextualId = reader.ReadDouble();
            m_look = new EntityLook();
            m_look.Deserialize(reader);
            m_disposition = ProtocolTypeManager.GetInstance<EntityDispositionInformations>((short)reader.ReadUShort());
            m_disposition.Deserialize(reader);
        }
    }
}
