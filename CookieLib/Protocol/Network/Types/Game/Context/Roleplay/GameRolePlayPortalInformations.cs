//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.Protocol.Network.Types.Game.Context.Roleplay
{
    using Cookie.Protocol.Network.Types.Game.Context.Roleplay.TreasureHunt;
    using Cookie.Protocol.Network.Types.Game.Look;
    using Cookie.Protocol.Network.Types.Game.Context;
    using Cookie.Protocol.Network;
    using System.Collections.Generic;
    using Cookie.Protocol.Network.Messages;
    using Cookie.Protocol.Network.Types;
    using Cookie.IO;
    
    
    public class GameRolePlayPortalInformations : GameRolePlayActorInformations
    {
        
        public new const short ProtocolId = 467;
        
        public override short TypeID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private PortalInformation m_portal;
        
        public virtual PortalInformation Portal
        {
            get
            {
                return m_portal;
            }
            set
            {
                m_portal = value;
            }
        }
        
        public GameRolePlayPortalInformations(PortalInformation portal)
        {
            m_portal = portal;
        }
        
        public GameRolePlayPortalInformations()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            base.Serialize(writer);
            writer.WriteUShort(((ushort)(m_portal.TypeID)));
            m_portal.Serialize(writer);
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            base.Deserialize(reader);
            m_portal = ProtocolTypeManager.GetInstance<PortalInformation>((short)reader.ReadUShort());
            m_portal.Deserialize(reader);
        }
    }
}
