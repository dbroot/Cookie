//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.Protocol.Network.Types.Game.Dare
{
    using System.Collections.Generic;
    using Cookie.Protocol.Network.Messages;
    using Cookie.Protocol.Network.Types;
    using Cookie.IO;
    
    
    public class DareCriteria : NetworkType
    {
        
        public const short ProtocolId = 501;
        
        public override short TypeID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private List<System.Int32> m_params;
        
        public virtual List<System.Int32> Params
        {
            get
            {
                return m_params;
            }
            set
            {
                m_params = value;
            }
        }
        
        private byte m_type;
        
        public virtual byte Type
        {
            get
            {
                return m_type;
            }
            set
            {
                m_type = value;
            }
        }
        
        public DareCriteria(List<System.Int32> @params, byte type)
        {
            m_params = @params;
            m_type = type;
        }
        
        public DareCriteria()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            writer.WriteShort(((short)(m_params.Count)));
            int paramsIndex;
            for (paramsIndex = 0; (paramsIndex < m_params.Count); paramsIndex = (paramsIndex + 1))
            {
                writer.WriteInt(m_params[paramsIndex]);
            }
            writer.WriteByte(m_type);
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            int paramsCount = reader.ReadUShort();
            int paramsIndex;
            m_params = new System.Collections.Generic.List<int>();
            for (paramsIndex = 0; (paramsIndex < paramsCount); paramsIndex = (paramsIndex + 1))
            {
                m_params.Add(reader.ReadInt());
            }
            m_type = reader.ReadByte();
        }
    }
}
