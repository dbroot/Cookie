//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.Protocol.Network.Types.Game.House
{
    using System.Collections.Generic;
    using Cookie.Protocol.Network.Messages;
    using Cookie.Protocol.Network.Types;
    using Cookie.IO;
    
    
    public class HouseInstanceInformations : NetworkType
    {
        
        public const short ProtocolId = 511;
        
        public override short TypeID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private bool m_secondHand;
        
        public virtual bool SecondHand
        {
            get
            {
                return m_secondHand;
            }
            set
            {
                m_secondHand = value;
            }
        }
        
        private bool m_isOnSale;
        
        public virtual bool IsOnSale
        {
            get
            {
                return m_isOnSale;
            }
            set
            {
                m_isOnSale = value;
            }
        }
        
        private bool m_isSaleLocked;
        
        public virtual bool IsSaleLocked
        {
            get
            {
                return m_isSaleLocked;
            }
            set
            {
                m_isSaleLocked = value;
            }
        }
        
        private int m_instanceId;
        
        public virtual int InstanceId
        {
            get
            {
                return m_instanceId;
            }
            set
            {
                m_instanceId = value;
            }
        }
        
        private string m_ownerName;
        
        public virtual string OwnerName
        {
            get
            {
                return m_ownerName;
            }
            set
            {
                m_ownerName = value;
            }
        }
        
        public HouseInstanceInformations(bool secondHand, bool isOnSale, bool isSaleLocked, int instanceId, string ownerName)
        {
            m_secondHand = secondHand;
            m_isOnSale = isOnSale;
            m_isSaleLocked = isSaleLocked;
            m_instanceId = instanceId;
            m_ownerName = ownerName;
        }
        
        public HouseInstanceInformations()
        {
        }
        
        public override void Serialize(ICustomDataOutput writer)
        {
            byte flag = new byte();
            BooleanByteWrapper.SetFlag(0, flag, m_secondHand);
            BooleanByteWrapper.SetFlag(1, flag, m_isOnSale);
            BooleanByteWrapper.SetFlag(2, flag, m_isSaleLocked);
            writer.WriteByte(flag);
            writer.WriteInt(m_instanceId);
            writer.WriteUTF(m_ownerName);
        }
        
        public override void Deserialize(ICustomDataInput reader)
        {
            byte flag = reader.ReadByte();
            m_secondHand = BooleanByteWrapper.GetFlag(flag, 0);
            m_isOnSale = BooleanByteWrapper.GetFlag(flag, 1);
            m_isSaleLocked = BooleanByteWrapper.GetFlag(flag, 2);
            m_instanceId = reader.ReadInt();
            m_ownerName = reader.ReadUTF();
        }
    }
}
